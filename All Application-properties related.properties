## all spring basic related ###
spring.application.name=limits-service


# spring boot related
#To activate all actuator endpoints ,place this url in below property file
management.endpoints.web.exposure.include=*




#database related
spring.datasource.url=

#h2 database related properties
#To enabe the h2 console so that u can see the h2 console in any chrome /IE broswer H2 console available at 'localhost:8080/h2-console'.
spring.h2.console.enabled = true
spring.datasource.url=jdbc:h2:mem:testdb



# ALL JPA RELATED
#to print the queries to conosle
spring.jpa.show-sql=true



###Microservices config server related###
###########################################################
#if ur config cleint app wants to connect to config server then keep below

spring.config.import=optional:configserver:http://localhost:8888

#if ur config server app wants to connect to local git repository
spring.cloud.config.server.git.uri=file:///F:/eclipse/sampleGitPropertiesRepo/

## while this cfg client communicating with config server it will speak with this name ##
spring.cloud.config.profile=qa
spring.cloud.config.name=limits-service-config-client


############spreing retry related##########################
#sample-api is the name will be given in annotattion like-->     @Retry(name="/sample-api" ,fallbackMethod = "m1FallBackMethod")
resilience4j.retry.instances.sample-api.maxAttempts=5 #NEW
#resilience4j.retry.instances.sample-api.maxRetryAttempts=5 #OLD

#wait duration menas after every failure it will wait for 1 second before retrying
resilience4j.retry.instances.sample-api.waitDuration=1s
#ExponentialBackoff means -for every retry wait time will be exponentially increasing, i mean wait time is not constant for every retry
#1st it will wait for 
resilience4j.retry.instances.sample-api.enableExponentialBackoff=true
#resilience4j.circuitbreaker.instances.default.failureRateThreshold=90
#This is rate limiting- means for 10 seconds maximum 2 request only, if more requests execute fallback method only.
resilience4j.ratelimiter.instances.default.limitForPeriod=2
resilience4j.ratelimiter.instances.default.limitRefreshPeriod=10s
resilience4j.bulkhead.instances.default.maxConcurrentCalls=10
resilience4j.bulkhead.instances.sample-api.maxConcurrentCalls=10